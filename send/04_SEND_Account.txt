;; Shivgoraksh
;; Batched Account Send - Max 10 records per batch


[Collection: SEND_Account]

	Export Header	: "Accept: application/json"
	Export Header	: "Accept-Charset: utf-8"
	Export Header	: "Authorization: " + "token " + @@AuthToken

	Data Source: HTTP JSON: @@ERPNextHost + '/api/method/express_tally.receive_tally.account'

	RemoteRequest: SEND_Account : UTF8
	JSON Object Path: "message:1"

	[Function: SEND_Account_Start]

		10 : Start Timer: SEND_Account_Timer : 1

	[System: Events]

		SEND_Account_Timer : Timer: True: Call: SEND_Account


[Function: SEND_Account]

	Variable : vName  : String
	Variable : vMessage : String
	Variable : vStatus : String
	Variable : vBatchCount : Number: 0
	Variable : vTotalCount : Number: $$NumItems:SEND_Account_Tally

	06 : Do If: (##vTotalCount = 0) :  Stop Timer: SEND_Account_Timer
	07 : Do If: (##vTotalCount = 0) :  Log: "No accounts to send"
	08 : Do If: (##vTotalCount = 0) :  Return

	09 : Stop Timer: SEND_Account_Timer
	10 : Start Progress: ##vTotalCount : "Sending Accounts (Max 10 per batch)" : ""

	10a: Log: "=== PREPARING BATCH ==="
	10a1: File Write: "account_log.txt" : "=== PREPARING BATCH ===" + $$NewLine
	10b: Walk Collection: SEND_Account_Tally
	10c: 	Log: "Queue: " + $Name + " (Parent: " + $Parent + ")"
	10c1: 	File Write: "account_log.txt" : "Queue: " + $Name + " (Parent: " + $Parent + ")" + $$NewLine
	10d: 	Break If: $$Line >= 10
	10e: End Walk
	10f: Log: "=== SENDING BATCH ==="
	10f1: File Write: "account_log.txt" : "=== SENDING BATCH ===" + $$NewLine

	11 : Walk Collection: SEND_Account

	12 : 	Set: vStatus : $Status
	13 : 	If: Not $$IsEmpty:##vStatus
	14 :		Start Batch Post
	15 : 		Walk Collection: data
	16 : 			Increment: vBatchCount
	17 : 			Log: "=== ACCOUNT [" + $$String:##vBatchCount + "] ==="
	18 : 			Log: "Account Name: " + $name
	19 : 			Log: "Parent Account: " + $parent_account
	20 : 			Log: "Response Status: " + If $$IsEmpty:$message Then "SUCCESS" Else "ERROR"
	21 : 			Log: "Response Message: " + $message
	22 : 			Set: vName : $name
	23 : 			Set: vMessage : $message
	24 : 			Modify Object: (Ledger, ##vName).WebStatus[1].WebStatus : ""
	25 :			Modify Object: (Ledger, ##vName).WebStatus_message[1].WebStatus_message : ##vMessage
	26 :			Show Progress: ##vBatchCount
	27 :		End Walk
	28 : 		End Batch Post
	29 : 	End If
	30 : End Walk

	27 : Log: "Batch complete. Processed: " + $$String:##vBatchCount + " accounts"
	28 : Do If: ($$NumItems:SEND_Account_Tally > 0) :  Start Timer: SEND_Account_Timer : 2
	

;[#Menu: Gateway of Tally]
;	
;	Add: Item: Request - Customer: Display: SEND_Customer

[Report : SEND_Account]
	
	Form: SEND_Account
	
	[Form: SEND_Account]
		
		Part: SEND_Account
		Delete: XMLTag

	[Part: SEND_Account]
		
		Line: SEND_Account
		Repeat: SEND_Account : SEND_Account_Tally
		Scroll: Vertical
		
		[Line: SEND_Account]

			Field: SEND_Account_name, SEND_Account_doctype, SEND_Account_group
			Field: SEND_company

			JSONTag: "data"
			Empty: $$Line > 10
						
			[Field: SEND_Account_name]
				
				Set as: $Name
				JSONTag: "account_name"
				
				
			[Field: SEND_Account_doctype]
				
				Set as: "Account"
				JSONTag: "doctype"

			[Field: SEND_Account_group]

				Set as: $Parent + " - " + @@EnableERPNextCmpAbbr
				JSONTag : "parent_account"

[Collection: SEND_Account_Tally]

	Type: Ledger
	Belongs To: Yes
	Filter : WebStatus
	Fetch: Name, Parent
	Filter: NonDebtors, NonCreditors
	Sort: Parent, Name

	[System: Formula]

		WebStatus : $WebStatus = "Push" OR $WebStatus = "Repush"
		NonDebtors : Not $$IsGroupSundryDebtors:$Parent
		NonCreditors : Not $$IsGroupSundryCreditors:$Parent

;	Filter: Customer_DebugFilter
;	
;	[System: Formula]
;		
;		Customer_DebugFilter: $Name IN ("2N 2N Enterprises, Hata Bharandi", "3 Star Electrical, Umarkot")
