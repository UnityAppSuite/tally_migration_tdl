;; Shivgoraksh
;; Batched Account Send - Max 10 records per batch


[Collection: SEND_Account]

	Export Header	: "Accept: application/json"
	Export Header	: "Accept-Charset: utf-8"
	Export Header	: "Authorization: " + "token " + @@AuthToken

	Data Source: HTTP JSON: @@ERPNextHost + '/api/method/express_tally.receive_tally.account'

	RemoteRequest: SEND_Account : UTF8
	JSON Object Path: "message:1"

	[Function: SEND_Account_Start]

		Variable: vBatchSize : Number: 10
		Variable: vProcessedCount : Number: 0
		Variable: vTotalRecords : Number: $$NumItems:SEND_Account_Tally

		10 : Log: "Starting batch send. Total accounts: " + $$String:##vTotalRecords
		20 : Set: vProcessedCount : 0
		30 : Start Timer: SEND_Account_Timer : 1

	[System: Events]

		SEND_Account_Timer : Timer: True: Call: SEND_Account


[Function: SEND_Account]

	Variable : vName  : String
	Variable : vMessage : String
	Variable : vStatus : String
	Variable : vCurrentBatchCount : Number: 0
	Variable : vSkipCount : Number: 0
	Variable : vRecordIndex : Number: 0

	05 : Do If: ($$NumItems:SEND_Account_Tally = 0) :  Stop Timer: SEND_Account_Timer
	06 : Do If: ($$NumItems:SEND_Account_Tally = 0) :  Log: "All accounts sent. Total: " + $$String:##vProcessedCount
	07 : Do If: ($$NumItems:SEND_Account_Tally = 0) :  Return

	08 : Stop Timer: SEND_Account_Timer
	09 : Start Progress: ##vTotalRecords : "Sending Accounts" : "Processing batch..."
	10 : Show Progress: ##vProcessedCount

	11 : Set: vSkipCount : ##vProcessedCount
	12 : Set: vCurrentBatchCount : 0

	13 : Log: "Starting batch from position " + $$String:##vSkipCount + 1

	14 : Walk Collection: SEND_Account_Tally
	15 : 	Increment: vRecordIndex
	16 : 	If: ##vRecordIndex > ##vSkipCount
	17 : 		Increment: vCurrentBatchCount
	18 : 		Log: "Adding to batch [" + $$String:##vCurrentBatchCount + "]: " + $Name
	19 : 	End If
	20 : 	Break If: ##vCurrentBatchCount >= ##vBatchSize
	21 : End Walk

	22 : Do If: ##vCurrentBatchCount = 0 : Log: "No more records to process"
	23 : Do If: ##vCurrentBatchCount = 0 : Return

	24 : Log: "Sending batch of " + $$String:##vCurrentBatchCount + " accounts..."

	25 : Walk Collection: SEND_Account
	26 : 	Set: vStatus : $Status
	27 : 	If: Not $$IsEmpty:##vStatus
	28 :		Start Batch Post
	29 : 		Walk Collection: data
	30 : 			Log: "Response: " + $name + " - " + $message
	31 : 			Set: vName : $name
	32 : 			Set: vMessage : $message
	33 : 			Modify Object: (Ledger, ##vName).WebStatus[1].WebStatus : @@ERPNextResetFlag
	34 :			Modify Object: (Ledger, ##vName).WebStatus_message[1].WebStatus_message : ##vMessage
	35 :			Increment: vProcessedCount
	36 :			Show Progress: ##vProcessedCount
	37 :		End Walk
	38 : 		End Batch Post
	39 : 	End If
	40 : End Walk

	41 : Log: "Batch complete. Total processed: " + $$String:##vProcessedCount + "/" + $$String:##vTotalRecords

	42 : Do If: ($$NumItems:SEND_Account_Tally > 0) :  Start Timer: SEND_Account_Timer : 2
	

;[#Menu: Gateway of Tally]
;	
;	Add: Item: Request - Customer: Display: SEND_Customer

[Report : SEND_Account]
	
	Form: SEND_Account
	
	[Form: SEND_Account]
		
		Part: SEND_Account
		Delete: XMLTag

	[Part: SEND_Account]
		
		Line: SEND_Account
		Repeat: SEND_Account : SEND_Account_Tally
		Scroll: Vertical
		
		[Line: SEND_Account]

			Field: SEND_Account_name, SEND_Account_doctype, SEND_Account_group
			Field: SEND_company

			JSONTag: "data"
			Empty: $$Line <= ##vProcessedCount OR $$Line > (##vProcessedCount + ##vBatchSize)
						
			[Field: SEND_Account_name]
				
				Set as: $Name
				JSONTag: "account_name"
				
				
			[Field: SEND_Account_doctype]
				
				Set as: "Account"
				JSONTag: "doctype"

			[Field: SEND_Account_group]

				Set as: $Parent + " - " + @@EnableERPNextCmpAbbr
				JSONTag : "parent_account"

[Collection: SEND_Account_Tally]
	
	Type: Ledger
	Belongs To: Yes
	Filter : WebStatus
	Fetch: Name, Parent
	Filter: NonDebtors, NonCreditors
	
	[System: Formula]
		
		NonDebtors : Not $$IsGroupSundryDebtors:$Parent
		NonCreditors : Not $$IsGroupSundryCreditors:$Parent

;	Filter: Customer_DebugFilter
;	
;	[System: Formula]
;		
;		Customer_DebugFilter: $Name IN ("2N 2N Enterprises, Hata Bharandi", "3 Star Electrical, Umarkot")
