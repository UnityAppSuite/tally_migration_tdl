;; Shivgoraksh
;; Batched Account Send - Max 10 records per batch


[Collection: SEND_Account]

	Export Header	: "Accept: application/json"
	Export Header	: "Accept-Charset: utf-8"
	Export Header	: "Authorization: " + "token " + @@AuthToken

	Data Source: HTTP JSON: @@ERPNextHost + '/api/method/express_tally.receive_tally.account'

	RemoteRequest: SEND_Account : UTF8
	JSON Object Path: "message:1"

	[Function: SEND_Account_Start]

		10 : Start Timer: SEND_Account_Timer : 1

	[System: Events]

		SEND_Account_Timer : Timer: True: Call: SEND_Account


[Function: SEND_Account]

	Variable : vName  : String
	Variable : vMessage : String
	Variable : vStatus : String
	Variable : vProcessedCount : Number: 0
	Variable : vTotalCount : Number: $$NumItems:SEND_Account_Tally

	06 : Do If: (##vTotalCount = 0) :  Stop Timer: SEND_Account_Timer
	07 : Do If: (##vTotalCount = 0) :  Log: "No accounts to send"
	08 : Do If: (##vTotalCount = 0) :  Return

	09 : Stop Timer: SEND_Account_Timer
	10 : Start Progress: 1 : "Sending All Accounts in Hierarchical Order" : ""

	11 : Log: "=== SENDING ALL ACCOUNTS ==="
	12 : Log: "Total accounts to process: " + $$String:##vTotalCount

	13 : Walk Collection: SEND_Account

	14 : 	Set: vStatus : $Status
	15 : 	If: Not $$IsEmpty:##vStatus
	16 :		Start Batch Post
	17 : 		Walk Collection: data
	18 : 			Increment: vProcessedCount
	19 : 			Log: "Processing [" + $$String:##vProcessedCount + "/" + $$String:##vTotalCount + "]: " + $name + " (Parent: " + $parent_account + ")"
	20 : 			Set: vName : $name
	21 : 			Set: vMessage : $message
	22 : 			Modify Object: (Ledger, ##vName).WebStatus[1].WebStatus : @@ERPNextResetFlag
	23 :			Modify Object: (Ledger, ##vName).WebStatus_message[1].WebStatus_message : ##vMessage
	24 :		End Walk
	25 : 		End Batch Post
	26 : 	End If
	27 : End Walk

	28 : Log: "Transfer complete. Processed: " + $$String:##vProcessedCount + " accounts"
	

;[#Menu: Gateway of Tally]
;	
;	Add: Item: Request - Customer: Display: SEND_Customer

[Report : SEND_Account]
	
	Form: SEND_Account
	
	[Form: SEND_Account]
		
		Part: SEND_Account
		Delete: XMLTag

	[Part: SEND_Account]
		
		Line: SEND_Account
		Repeat: SEND_Account : SEND_Account_Tally
		Scroll: Vertical
		
		[Line: SEND_Account]

			Field: SEND_Account_name, SEND_Account_doctype, SEND_Account_group
			Field: SEND_company

			JSONTag: "data"
			Empty: $$Line > @@RecordsLimit
						
			[Field: SEND_Account_name]
				
				Set as: $Name
				JSONTag: "account_name"
				
				
			[Field: SEND_Account_doctype]
				
				Set as: "Account"
				JSONTag: "doctype"

			[Field: SEND_Account_group]

				Set as: $Parent + " - " + @@EnableERPNextCmpAbbr
				JSONTag : "parent_account"

[Collection: SEND_Account_Tally]

	Collection: Level1_Accounts, Level2_Accounts, Level3_Accounts, Level4_Accounts, Level5_Accounts

[Collection: Level1_Accounts]
	Type: Ledger
	Belongs To: Yes
	Filter : WebStatus, IsLevel1
	Fetch: Name, Parent
	Filter: NonDebtors, NonCreditors
	Sort: Name

[Collection: Level2_Accounts]
	Type: Ledger
	Belongs To: Yes
	Filter : WebStatus, IsLevel2
	Fetch: Name, Parent
	Filter: NonDebtors, NonCreditors
	Sort: Name

[Collection: Level3_Accounts]
	Type: Ledger
	Belongs To: Yes
	Filter : WebStatus, IsLevel3
	Fetch: Name, Parent
	Filter: NonDebtors, NonCreditors
	Sort: Name

[Collection: Level4_Accounts]
	Type: Ledger
	Belongs To: Yes
	Filter : WebStatus, IsLevel4
	Fetch: Name, Parent
	Filter: NonDebtors, NonCreditors
	Sort: Name

[Collection: Level5_Accounts]
	Type: Ledger
	Belongs To: Yes
	Filter : WebStatus, IsLevel5
	Fetch: Name, Parent
	Filter: NonDebtors, NonCreditors
	Sort: Name

	[System: Formula]

		WebStatus : $WebStatus = "Push" OR $WebStatus = "Repush"
		NonDebtors : Not $$IsGroupSundryDebtors:$Parent
		NonCreditors : Not $$IsGroupSundryCreditors:$Parent

		IsLevel1 : $Parent IN ("Assets", "Liabilities", "Capital Account", "Current Assets", "Current Liabilities", "Fixed Assets", "Investments", "Miscellaneous Expenses (ASSET)", "Suspense A/c")
		IsLevel2 : NOT @@IsLevel1 AND NOT ($Parent Contains ":")
		IsLevel3 : ($Parent Contains ":") AND NOT ($Parent Contains ":.*:")
		IsLevel4 : ($Parent Contains ":.*:") AND NOT ($Parent Contains ":.*:.*:")
		IsLevel5 : $Parent Contains ":.*:.*:"

;	Filter: Customer_DebugFilter
;	
;	[System: Formula]
;		
;		Customer_DebugFilter: $Name IN ("2N 2N Enterprises, Hata Bharandi", "3 Star Electrical, Umarkot")
